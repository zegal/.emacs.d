'''LustyExplorer''' is a fast and responsive way to manage files and buffers.  It includes both a filesystem explorer and a buffer switcher through a common interface.

It's like <code>find-file</code> crossed with <code>iswitchb</code> or InteractivelyDoThings, but with a larger and more easily readable dedicated window for matches instead of the minibuffer.

[http://viewglob.sourceforge.net/lusty-explorer.el.animated.gif Here's a 3.4 MB animated gif showing it in action] (Note: 2.0+ uses fuzzy matching instead of tab completion)

After copying the file into your load-path, put this in your .emacs:

    (require 'lusty-explorer)

Launch the explorer with one of these commands:

    M-x lusty-file-explorer
    M-x lusty-buffer-explorer

As you type a name, the list updates using a fuzzy matching algorithm.  Press <code>RET</code> or <code>TAB</code> to select the highlighted match, or <code>C-n</code>/<code>C-p</code> to highlight the next/previous match

'''LustyExplorer''' is based on the [http://www.vim.org/scripts/script.php?script_id=1890 Vim plugin] of the same name.

= Download =
Lisp:lusty-explorer.el

[http://github.com/sjbach/lusty-emacs Development repository]

= Changelist =

Version 2.3:
* For iswitchb congruity, <code>C-s</code>/<code>C-r</code>: select next/previous match.
* Buffer explorer: put current buffer at end of matches list for more intuitive switching.  Thanks to Alex Schroeder.
* Buffer explorer: sort first by fuzzy matching score, then by most recently used.
* More intuitive action on <code>RET</code> key press, to differentiate from <code>TAB</code>.  Thanks to René Kyllingstad.
* Minor performance improvement.

Version 2.2:
* New keys:
** <code>C-f</code>: move highlight to next column.
** <code>C-b</code>: move highlight to previous column.
** <code>C-x e</code>: open a new buffer with current name.
** <code>C-x d</code>: launch <code>dired</code> at the currently viewed directory.
* Fix processing of <code>completion-ignored-extensions</code>.
* Minor performance improvement.

Version 2.1:
* Vast performance improvement.
* Fixed sort order of matches.
* Smarter match layout algorithm; faster, and makes better use of available space.
* Print TRUNCATED indicator reliably.
* Determine maximum window height reliably.
* List buffers in MRU order when first presented.

Version 2.0:
* Introduced a flex/fuzzy matching algorithm, [http://github.com/rmm5t/liquidmetal/tree/master LiquidMetal].
* Added custom keymap and setup hook.
* Faster implementation of lusty-columnize.  Thanks to Volkan Yazici.
* Catch an error when enlarging the completions buffer.
* Many small changes.

Version 1.0.2:
* Fixed a bug in completion-ignored-extensions matching.  Thanks to Hugo Schmitt.

Version 1.0.1:
* Made the completion window more useable in multi-window configurations.  Thanks to Jan Rehders.
* Fixed two bugs in computing optimal completion content layout.

= Discussion =

[new]
I tried it for a few hours. I like the larger window -- specially when finding files.
I bound the buffer-switching to `C-x b' and the file-finding to `C-x C-f' in order to force me to use it.

I also had some subtle user interface issues. How do regular users deal with these?

# I expected `C-x b RET' to take me back to the previous buffer. I found that I had to start typing the buffer names a lot more often than with IswitchBuffers.
# I expected `C-x C-f' followed by some typing and ##‘DEL RET’## (where I delete the last slash) to open dired. Now I have to use `C-x d' at the end, which is a (tiny) bit harder to type.
# When I see the match I'm looking for, I need to use `C-n' to pick it, where as I'm used to typing `C-s'. (That one is probably the easiest to fix for end users.)

-- AlexSchroeder

[new]
Another issue when coming from IswitchBuffers:

# I expected `C-x b C-n RET' _after_ a split-window to take me to the most recently used buffer. I use this all the time to show two buffers side-by-side. Instead it just selects the already selected buffer.

[new]
Thanks! Re: (1), you're right, this only makes sense.  Re: (2), I've changed `RET' to work more like you expect.  And re: (3), I added bindings for `C-s' and `C-r' to be  more in line with IswitchBuffers.  These changes are in the github repo for now -- I'll release once I've played with them for a while.

-- sjbach

----
CategoryBufferSwitching CategoryFiles CategoryCompletion

